#!/bin/bash
{
	#////////////////////////////////////
	# DietPi AutoStart Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - Filename: /DietPi/dietpi/dietpi-autostart
	#
	# Usage:
	# - dietpi-autostart		Menu system
	# - dietpi-autostart int	Apply autostart index non-interactively
	#////////////////////////////////////

	# Import DietPi-Globals --------------------------------------------------------------
	. /DietPi/dietpi/func/dietpi-globals
	G_PROGRAM_NAME='DietPi-Autostart'
	G_CHECK_ROOT_USER
	G_INIT
	# Import DietPi-Globals --------------------------------------------------------------

	# Grab Input (valid integer)
	disable_error=1 G_CHECK_VALIDINT "$1" && INPUT=$1 || INPUT=-1

	#/////////////////////////////////////////////////////////////////////////////////////
	# MENUS
	#/////////////////////////////////////////////////////////////////////////////////////
	TARGETMENUID=0

	AUTO_START_INDEX=0
	Apply_Boot_Index(){

		# Disable all autostart options first
		# - LightDM
		systemctl disable lightdm &> /dev/null

		# - Amiberry
		systemctl disable amiberry &> /dev/null
		if (( $G_HW_MODEL < 10 )); then

			sed -i '/^[[:blank:]]*boot_delay=0/d' /DietPi/config.txt
			sed -i 's/[[:blank:]]*logo.nologo//' /boot/cmdline.txt
			sed -i 's/[[:blank:]]*loglevel=3//' /boot/cmdline.txt
			sed -i 's/console=tty3/console=tty1/' /boot/cmdline.txt

		fi

		# - Custom script
		systemctl disable dietpi-autostart_custom &> /dev/null
		[[ -f '/etc/systemd/system/dietpi-autostart_custom.service' ]] && rm /etc/systemd/system/dietpi-autostart_custom.service

		# - Auto login
		local fp_svc='/etc/systemd/system/getty@tty1.service.d'
		if [[ -d $fp_svc ]]; then

			[[ -f $fp_svc/dietpi-autologin.conf ]] && rm $fp_svc/dietpi-autologin.conf
			rmdir --ignore-fail-on-non-empty $fp_svc

		fi

		#----------------------------------------------------------------------
		# Enable selected autostart option
		# - Custom script, service without auto login: https://github.com/MichaIng/DietPi/issues/1024
		if (( $AUTO_START_INDEX == 14 )); then

			cat << _EOF_ > /etc/systemd/system/dietpi-autostart_custom.service
[Unit]
Description=DietPi-Autostart (Custom /var/lib/dietpi/dietpi-autostart/custom.sh)
Requisite=dietpi-boot.service
After=dietpi-boot.service dietpi-postboot.service rc-local.service
ConditionPathExists=/var/lib/dietpi/dietpi-autostart/custom.sh

[Service]
Type=idle
RemainAfterExit=yes
StandardOutput=tty
ExecStartPre=$(command -v chmod) +x /var/lib/dietpi/dietpi-autostart/custom.sh
ExecStartPre=$(which echo) 'Starting DietPi-Autostart (Custom) script...'
ExecStart=/var/lib/dietpi/dietpi-autostart/custom.sh

[Install]
WantedBy=multi-user.target
_EOF_
			systemctl enable dietpi-autostart_custom

		# - Amiberry fast boot via enabled service
		elif (( $AUTO_START_INDEX == 6 )); then

			systemctl enable amiberry

			# - Enable systemd-logind to have a login console ready after exiting AmiBerry from fastboot
			systemctl unmask systemd-logind
			systemctl enable systemd-logind &> /dev/null

			# - Apply tweaks
			if (( $G_HW_MODEL < 10 )); then

				G_CONFIG_INJECT 'boot_delay=' 'boot_delay=0' /DietPi/config.txt
				grep -qi ' logo.nologo' /boot/cmdline.txt || sed -i 's/rootwait/rootwait logo.nologo/' /boot/cmdline.txt
				grep -qi ' loglevel=3' /boot/cmdline.txt || sed -i 's/rootwait/rootwait loglevel=3/' /boot/cmdline.txt
				grep -qi ' console=tty3' /boot/cmdline.txt || sed -i 's/console=tty1/console=tty3/' /boot/cmdline.txt

			fi

		# - Enable autologin
		elif (( $AUTO_START_INDEX > 0 )); then

			# - Autologin user, only ask in interactive mode and skip for LightDM, which must be started as root
			local user=$(grep -m1 '^[[:blank:]]*AUTO_SETUP_AUTOSTART_LOGIN_USER=' /DietPi/dietpi.txt | sed 's/^[^=]*=//')
			if (( $AUTO_START_INDEX == 16 )); then

				# - LightDM pre-req check, but install only if xinit (a desktop) is already installed. This is re-applied by dietpi-software after install automatically.
				command -v startx &> /dev/null && G_AG_CHECK_INSTALL_PREREQ lightdm
				user='root'

			elif (( $INPUT == -1 )); then

				# - Only users with ID >= 1000 (+ root) and with valid login shell
				G_WHIP_MENU_ARRAY=( 'root' 'UID:0' $(mawk -F: '$3 >= 1000 && $7 ~ /^\/bin\/.*sh$/ {print $1" UID:"$3}' /etc/passwd) )
				G_WHIP_DEFAULT_ITEM=$user
				G_WHIP_MENU "Please choose a user to login with.
NB: You might need to grant the user permissions to run the chosen autostart option.\n\nCurrent choice: $user" && user=$G_WHIP_RETURNED_VALUE

			fi

			# - Sanity check
			if ! grep -qE "^$user:[^:]*:(0|[1-9][0-9][0-9][0-9]+):.*:/bin/[^:]*sh$" /etc/passwd; then

				G_DIETPI-NOTIFY 1 "User \"$user\" does not exist, is a system user or does not have a valid login shell. Reverting to \"root\"."
				user='root'

			fi

			mkdir -p /etc/systemd/system/getty@tty1.service.d
			cat << _EOF_ > /etc/systemd/system/getty@tty1.service.d/dietpi-autologin.conf
[Service]
ExecStart=
ExecStart=-/sbin/agetty -a $user %I \$TERM
_EOF_

		else

			rm -f /{DietPi,boot}/dietpi/.dietpi-autostart_index

		fi

		# Save boot index, if not default 0
		(( $AUTO_START_INDEX )) && echo $AUTO_START_INDEX > /DietPi/dietpi/.dietpi-autostart_index

		systemctl daemon-reload

	}

	# TARGETMENUID=0
	Menu_Main(){

		# Existing boot flag
		[[ -f '/DietPi/dietpi/.dietpi-autostart_index' ]] && AUTO_START_INDEX=$(</DietPi/dietpi/.dietpi-autostart_index)

		G_WHIP_MENU_ARRAY=(

			'' '●─ Local Terminal '
			'0' ': Manual login (default)'
			'7' ': Automatic login'
			'' '●─ Desktops '
			'16' ': LightDM login mask'
			'2' ': Automatic login'
			'' '●─ Browser Kiosk '
			'11' ': Chromium - Dedicated use without desktop'
			'' '●─ Media '
			'1' ': Kodi'
			'10' ': CAVA Spectrum'
			'' '●─ Gaming/Emulation '
			'6' ': Amiberry fast boot'
			'8' ': Amiberry standard boot'
			'3' ': RetroPie'
			'9' ': DXX-Rebith - Descent 1/2'
			'4' ': OpenTyrian'
			'' '●─ Other '
			'14' ': Custom - /var/lib/dietpi/dietpi-autostart/custom.sh'
			'5' ': DietPi-Cloudshell'

		)

		G_WHIP_BUTTON_CANCEL_TEXT='Exit'
		G_WHIP_DEFAULT_ITEM=$AUTO_START_INDEX
		G_WHIP_MENU "Current AutoStart Option: $AUTO_START_INDEX\n\nNB: If your choice is not \"Local Terminal\", please ensure required software is installed (or selected for install) with DietPi-Software."
		if (( $? == 0 )) && [[ $G_WHIP_RETURNED_VALUE ]]; then

			AUTO_START_INDEX=$G_WHIP_RETURNED_VALUE

			# Amiberry fast boot info
			if (( $AUTO_START_INDEX == 6 )); then

				G_WHIP_MSG 'Amiberry fast boot:\nA highly optimised and tweaked boot mode.
This mode allows for a < 2.5 second boot on an RPi3, into Amiberry.\n\nIf you experience boot issues with this mode, please try the "standard boot" option.'

			# Chromium prompt for URL
			elif (( $AUTO_START_INDEX == 11 )); then

				G_WHIP_DEFAULT_ITEM=$(grep -m1 '^[[:blank:]]*SOFTWARE_CHROMIUM_AUTOSTART_URL=' /DietPi/dietpi.txt | sed 's/^[^=]*=//')
				G_WHIP_INPUTBOX 'Please enter a homepage URL to start with Chromium:\n - eg: https://dietpi.com'
				(( $? == 0 )) && G_CONFIG_INJECT 'SOFTWARE_CHROMIUM_AUTOSTART_URL=' "SOFTWARE_CHROMIUM_AUTOSTART_URL=$G_WHIP_RETURNED_VALUE" /DietPi/dietpi.txt

			# Custom info
			elif (( $AUTO_START_INDEX == 14 )); then

				# - Create template
				if [[ ! -f '/var/lib/dietpi/dietpi-autostart/custom.sh' ]]; then

					mkdir -p /var/lib/dietpi/dietpi-autostart
					cat << _EOF_ > /var/lib/dietpi/dietpi-autostart/custom.sh
#!/bin/bash
#---Examples---

# - Chromium
#xinit chromium

# - LXDE
#startx

# - Print hello
#echo "Hello"

#---Put your code below this line---

_EOF_
					G_WHIP_MSG 'A template script has been created:\n - /var/lib/dietpi/dietpi-autostart/custom.sh\n
Please edit this file and enter the required commands you wish to launch. DietPi will then execute this script during boot.'

				fi

			fi

			# Apply selected boot option
			Apply_Boot_Index

		else

			# Exit
			TARGETMENUID=-1

		fi

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	# Start Menu
	if (( $INPUT == -1 )); then

		while (( $TARGETMENUID >= 0 )); do

			printf '\ec' # clear current terminal screen
			Menu_Main

		done

	# Apply boot index
	elif (( $INPUT >= 0 )); then

		AUTO_START_INDEX=$INPUT
		Apply_Boot_Index

	fi

	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}
