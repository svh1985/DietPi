#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Login Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - Filename: /{DietPi,boot}/dietpi/dietpi-login
	# - Called in interactive bash shells from: /etc/bashrc.d/dietpi.bash
	#////////////////////////////////////

	#/////////////////////////////////////////////////////////////////////////////////////
	# Globals
	#/////////////////////////////////////////////////////////////////////////////////////
	FP_DIETPI_FIRSTRUNSETUP_LOG='/var/tmp/dietpi/logs/dietpi-firstrun-setup.log'
	FP_DIETPI_FIRSTRUNSETUP_PID='/tmp/.dietpi-login_firstrun_setup.pid' # Must be on RAM, in case of reboot from dietpi-software etc, to reset file before this script can remove it.

	Show_License(){

		if [[ -f '/var/lib/dietpi/license.txt' ]] && (( $G_INTERACTIVE )); then

			G_WHIP_VIEWFILE /var/lib/dietpi/license.txt
			rm /var/lib/dietpi/license.txt

		fi

	}

	# Autoboot
	Run_AutoStart(){

		# - Boot into specific program if we have a valid screen
		if [[ ! $DISPLAY && $(tty) == '/dev/tty1' ]]; then

			# - Kodi
			if (( $auto_start_index == 1 )); then

				/DietPi/dietpi/misc/start_kodi

			# - Desktop (LXDE/MATE etc)
			elif (( $auto_start_index == 2 )); then

				clear
				if (( $G_HW_MODEL == 11 )); then

					sleep 5 && startx &

				else

					startx

				fi

			# - RetroPie/Emulation station
			elif (( $auto_start_index == 3 )); then

				#	emulationstation - can no longer be run as root
				/opt/retropie/supplementary/emulationstation/emulationstation.sh

			# - OpenTyrian
			elif (( $auto_start_index == 4 )); then

				/usr/local/games/opentyrian/run

			# - DietPi-Cloudshell
			elif (( $auto_start_index == 5 )); then

				setterm --blank 0 --powersave off --cursor off
				systemctl start dietpi-cloudshell

			# - Amiberry standard boot
			elif (( $auto_start_index == 8 )); then

				systemctl start amiberry

			# - DXX-Rebirth
			elif (( $auto_start_index == 9 )); then

				$G_FP_DIETPI_USERDATA/dxx-rebirth/run.sh

			# - CAVA
			elif (( $auto_start_index == 10 )); then

				sleep 4 # Wait for MPD fifo to start
				setterm --blank 0 --powersave off
				cava

			# - Chromium
			elif (( $auto_start_index == 11 )); then

				/var/lib/dietpi/dietpi-software/installed/chromium-autostart.sh

			# - LightDM
			elif (( $auto_start_index == 16 )); then

				systemctl start lightdm

			fi

		fi

	}

	# First Run Setup
	Run_DietPi_First_Run_Setup(){

		# - Set non-interactive if automated firstrun setup has been chosen
		grep -qi '^[[:blank:]]*AUTO_SETUP_AUTOMATED=1' /DietPi/dietpi.txt && export G_INTERACTIVE=0

		# - Prompt and wait if this script runs in other session already
		local pid_firstrunsetup
		[[ -f $FP_DIETPI_FIRSTRUNSETUP_PID ]] && pid_firstrunsetup=$(<$FP_DIETPI_FIRSTRUNSETUP_PID)
		if [[ $pid_firstrunsetup && $pid_firstrunsetup != $$ ]]; then

			# - First run setup running in other session
			local additional_text='Please resume setup on the active screen.'
			[[ $G_INTERACTIVE == 0 ]] && additional_text='Automated setup is in progress. When completed, the system will be rebooted.'

			G_WHIP_MSG "[INFO] DietPi first run setup: Currently running on another screen (PID=$pid_firstrunsetup).\n\n$additional_text"

			local restart_loop_delay=5
			G_DIETPI-NOTIFY 2 "Waiting $restart_loop_delay seconds before checking again. Please wait... (Press CTRL+C to abort)"
			sleep $restart_loop_delay

		elif (( $UID )); then

			G_WHIP_MSG '[ERROR] Root login required\n
To finish DietPi first run setup, root permissions are required.\n
Please login again as user "root" with password "dietpi", respectively the one you chose in "dietpi.txt".'

			exit 1

		# Proceed with 1st run setup
		else

			# Prevent re-run from another session.
			echo $$ > $FP_DIETPI_FIRSTRUNSETUP_PID
			# - Always remove PID file when script is killed
			trap '[[ -f $FP_DIETPI_FIRSTRUNSETUP_PID ]] && rm $FP_DIETPI_FIRSTRUNSETUP_PID' EXIT

			Show_License

			# 1st run dietpi-update
			if (( $G_DIETPI_INSTALL_STAGE == 0 )); then

				# - Check internet
				optional_cmd_inputs='--no-check-certificate' G_CHECK_URL "$(grep -m1 '^[[:blank:]]*deb[[:blank:]]' /etc/apt/sources.list | mawk '{print $2}')" # Will exit on failure here then prompt user to configure network

				# - Check NTP synced
				/DietPi/dietpi/func/run_ntpd

				# - Start DietPi-Update
				/DietPi/dietpi/dietpi-update 1 # Sets G_DIETPI_INSTALL_STAGE=1

			# 1st run dietpi-software installs
			elif (( $G_DIETPI_INSTALL_STAGE == 1 )); then

				# - Start DietPi-Software
				export G_WHIP_SIZE_X_OVERRIDE=$(tput cols)
				export G_WHIP_SIZE_Y_OVERRIDE=$(tput lines)
				/DietPi/dietpi/dietpi-software 2>&1 | tee $FP_DIETPI_FIRSTRUNSETUP_LOG # Sets G_DIETPI_INSTALL_STAGE=2
				unset G_WHIP_SIZE_X_OVERRIDE G_WHIP_SIZE_Y_OVERRIDE

			fi

		fi

	}

	Main(){

		# Wait for full system boot
		local i=0
		while pgrep -f '/DietPi/dietpi/postboot' &> /dev/null
		do

			echo -ne "\e[90m[\e[0m INFO \e[90m]\e[0m Waiting for DietPi-Postboot to finish... (Press CTRL+C to abort) ($((i++)))\r"
			sleep 1

		done

		while :
		do

			# Import DietPi-Globals --------------------------------------------------------------
			. /DietPi/dietpi/func/dietpi-globals
			G_PROGRAM_NAME='DietPi-Login'
			#G_INIT # To allow concurrent logins
			# Import DietPi-Globals --------------------------------------------------------------

			/DietPi/dietpi/func/obtain_network_details

			#----------------------------------------------------------------
			# Normal Login
			if (( $G_DIETPI_INSTALL_STAGE == 2 )); then

				Show_License

				/DietPi/dietpi/func/dietpi-banner 1

				local auto_start_index=0
				[[ -f '/DietPi/dietpi/.dietpi-autostart_index' ]] && auto_start_index=$(</DietPi/dietpi/.dietpi-autostart_index)
				(( $auto_start_index > 0 )) && Run_AutoStart

				break

			#----------------------------------------------------------------
			# Run DietPi-Update/DietPi-Software (1st run setup) (G_DIETPI_INSTALL_STAGE=0/1)
			elif [[ $G_DIETPI_INSTALL_STAGE == [01] ]]; then

				/DietPi/dietpi/func/dietpi-banner 0

				Run_DietPi_First_Run_Setup

			#----------------------------------------------------------------
			# Unknown install state
			else

				/DietPi/dietpi/func/dietpi-banner 0

				# - Force interactive mode to show G_WHIP error prompts
				#   NB: We need to write this to dietpi.txt as well to not have this overwritten on next loop.
				export G_INTERACTIVE=1
				G_CONFIG_INJECT 'AUTO_SETUP_AUTOMATED=' 'AUTO_SETUP_AUTOMATED=0' /DietPi/dietpi.txt

				if G_WHIP_DEFAULT_ITEM='yes' G_WHIP_YESNO "[FAILED] Unknown install state/First run setup failed\n
An error has occured either during first run update or installs.\n
First run setup will now attempt to re-apply the last step, forced as interactive run.
If this repeatedly fails, please collect all terminal output and the content of $FP_DIETPI_FIRSTRUNSETUP_LOG if available and report this issue to: https://github.com/MichaIng/DietPi/issues\n
Would you like to restart the first run setup and installation?"; then

					# - Reset and force re-run of first run
					killall -qw dietpi-software dietpi-update
					echo 0 > /DietPi/dietpi/.install_stage

				else

					break

				fi

			fi

		done

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	Main

	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}
